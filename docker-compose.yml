version: "3.7"
services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch-oss:${ELK_VERSION}
    labels:
        co.elastic.logs/module: "elasticsearch"
    volumes:
      - type: bind
        source: ./elasticsearch/config/elasticsearch.yml
        target: /usr/share/elasticsearch/config/elasticsearch.yml
        read_only: true
      - type: volume
        source: elasticsearch
        target: /usr/share/elasticsearch/data 
    expose:
      - "9200"
    environment:
      ES_JAVA_OPTS: "-Xmx256m -Xms256m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    restart: always
    networks:
      - byappt

  kibana:
    image: docker.elastic.co/kibana/kibana-oss:${ELK_VERSION}
    volumes:
      - type: bind
        source: ./kibana/config
        target: /usr/share/kibana/config
        read_only: true
    expose:
      - "5601"
    restart: always
    networks:
      - byappt
    depends_on:
      - elasticsearch

  filebeat:
    user: root
    image: docker.elastic.co/beats/filebeat-oss:${ELK_VERSION}
    command: filebeat -e -strict.perms=false
    volumes: 
      - type: bind
        source: ./filebeat/filebeat.docker.yml
        target: /usr/share/filebeat/filebeat.yml
        read_only: true
      - type: bind
        source: ./filebeat/modules.d
        target: /usr/share/filebeat/modules.d
        read_only: true
      - type: bind
        source: /var/lib/docker/containers
        target: /var/lib/docker/containers
        read_only: true
      - type: bind
        source: /var/run/docker.sock
        target: /var/run/docker.sock
        read_only: true
      - type: bind
        source: /var/log
        target: /var/log
        read_only: true
      - type: volume
        source: filebeat
        target: /usr/share/filebeat/data/
    restart: always
    networks:
      - byappt
    depends_on:
      - elasticsearch

  metricbeat:
    user: root
    image: docker.elastic.co/beats/metricbeat-oss:${ELK_VERSION}
    command: metricbeat --system.hostfs=/hostfs --strict.perms=false -e 
    volumes:
      - type: bind
        source: ./ca.pem
        target: /etc/pki/root/ca.pem
        read_only: true
      - type: bind
        source: ./metricbeat/metricbeat.docker.yml
        target: /usr/share/metricbeat/metricbeat.yml
        read_only: true
      - type: bind
        source: /var/run/docker.sock
        target: /var/run/docker.sock
        read_only: true
      - type: bind
        source: /sys/fs/cgroup
        target: /hostfs/sys/fs/cgroup
        read_only: true
      - type: bind
        source: /proc
        target: /hostfs/proc
        read_only: true
      - type: bind
        source: /
        target: /hostfs
        read_only: true
    restart: always
    network_mode: "host"
    privileged: true
    extra_hosts:
      - "es.byappt:127.0.0.1"
    depends_on:
      - elasticsearch

  packetbeat:
    image: docker.elastic.co/beats/packetbeat-oss:${ELK_VERSION}
    user: packetbeat
    cap_add: 
    - NET_RAW
    - NET_ADMIN
    restart: always
    network_mode: "host"
    volumes:
      - type: bind
        source: ./ca.pem
        target: /etc/pki/root/ca.pem
        read_only: true
      - type: bind
        source: ./packetbeat/packetbeat.docker.yml
        target: /usr/share/packetbeat/packetbeat.yml
        read_only: true
    extra_hosts:
      - "es.byappt:127.0.0.1"

  curator:
    build:
      context: curator
    labels:
      json_logger: true 
    restart: always 
    networks:
      - byappt

  jenkins:
    build:
      context: jenkins
    user: root
    expose: 
      - "8080"
    volumes:
    - type: volume
      source: jenkins_home
      target: /var/jenkins_home
    - type: bind
      source: /var/run/docker.sock
      target: /var/run/docker.sock
      read_only: true
    restart: always
    networks:
      - byappt

  nginx:
    image: nginx:1.17
    volumes: 
      - type: bind
        source: ./nginx/nginx.conf
        target: /etc/nginx/nginx.conf
        read_only: true
      - type: bind
        source: ./nginx/ssl
        target: /etc/ssl
        read_only: true
      - type: bind
        source: ./nginx/sites-enabled
        target: /etc/nginx/sites-enabled
        read_only: true
    restart: always
    networks:
      - byappt
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - kibana
      - elasticsearch
  
  pgres_monitor:
    image: docker.elastic.co/beats/metricbeat-oss:${ELK_VERSION}
    command: metricbeat --strict.perms=false -e 
    volumes:
      - type: bind
        source: ./pgres_monitor/metricbeat.docker.yml
        target: /usr/share/metricbeat/metricbeat.yml
        read_only: true
    networks:
      - byappt
    restart: always

  postgres:
    image: postgres:${PGRES_VERSION}
    command: ["-c", "log_duration=true", "-c", "log_line_prefix=[%u]@[%d]", "-c", "log_statement=all"]
    environment:
      POSTGRES_PASSWORD: postgres
    volumes:
    - type: volume
      source: postgres
      target: /var/lib/postgresql/data
    ports:
      - "5432"
    networks:
      - byappt
    restart: always

volumes:
  elasticsearch:
  filebeat:
  jenkins_home:
  postgres:

networks:
  byappt:
    
